name: Database Infrastructure Deployment

parameters:
  - name: resourceGroup
    displayName: Resource Group Name
    type: string
    default: Test
  - name: region
    displayName: Azure Region
    type: string
    default: East US 2
    values:
      - East US
      - East US 2
      - West US
      - West US 2
  - name: cosmosAccountName
    displayName: Cosmos DB Account Name
    type: string
    default: PetCloudStore
  - name: cosmosDatabaseName
    displayName: Cosmos Database Name
    type: string
    default: E-Commerce
  - name: cosmosContainerName
    displayName: Cosmos Container Name
    type: string
    default: Orders

trigger: none

variables:
  vmImageName: 'ubuntu-latest'
  azureServiceConnection: 'Azure'
  templateFile: 'petcloudstore/iac/bicep/db/main.bicep'

pool:
  vmImage: $(vmImageName)

stages:
  - stage: Deployment
    displayName: Database Infrastructure Deployment
    jobs:
      - deployment: Deploy
        displayName: Deploy Database Infrastructure
        pool:
          vmImage: 'ubuntu-latest'
        environment: 'Development'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(azureServiceConnection)
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: |
                      az --version
                      ls -l
                      if [ $(az group exists --name ${{ parameters.resourceGroup }}) = false ]; then
                        az group create --name ${{ parameters.resourceGroup }} --location 'eastus'
                      fi
                      az deployment group create \
                        --resource-group ${{ parameters.resourceGroup }} \
                        --template-file $(templateFile) \
                        --parameters accountName='${{ parameters.cosmosAccountName }}' \
                        location='${{ parameters.region }}' \
                        databaseName='${{ parameters.cosmosDatabaseName }}' \
                        containerName='${{ parameters.cosmosContainerName }}' \
                        partitionKeyPath='/partition' \
                        --verbose
